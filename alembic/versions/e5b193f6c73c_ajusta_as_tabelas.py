"""ajusta as tabelas

Revision ID: e5b193f6c73c
Revises: 1447bd66dad2
Create Date: 2025-05-18 00:55:15.106252

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e5b193f6c73c'
down_revision: Union[str, None] = '1447bd66dad2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usuarios', sa.Column('matricula', sa.String(), nullable=False))
    op.add_column('usuarios', sa.Column('status', sa.String(), nullable=False))
    op.add_column('usuarios', sa.Column('nome_emergencia', sa.String(), nullable=True))
    op.add_column('usuarios', sa.Column('telefone_emergencia', sa.String(), nullable=True))
    op.add_column('usuarios', sa.Column('cnh', sa.String(), nullable=True))
    op.add_column('usuarios', sa.Column('categoria_cnh', sa.String(), nullable=True))
    op.add_column('usuarios', sa.Column('data_validade_cnh', sa.String(), nullable=True))
    op.create_unique_constraint(None, 'usuarios', ['matricula'])
    op.drop_column('usuarios', 'contato_emergencia')

    op.execute(
        'ALTER TABLE viagens ALTER COLUMN data_hora TYPE TIMESTAMP WITHOUT TIME ZONE USING data_hora::timestamp'
    )

    # op.alter_column('viagens', 'data_hora',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.DateTime(),
    #            existing_nullable=False)
    
    viagemstatus_enum = sa.Enum("pendente", "confirmada", "cancelada", "finalizada", name="viagemstatus")
    viagemstatus_enum.create(op.get_bind())

    # Faz o cast manual da coluna
    op.execute(
        "ALTER TABLE viagens ALTER COLUMN status TYPE viagemstatus USING status::viagemstatus"
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('viagens', 'status',
                existing_type=sa.Enum('pendente', 'confirmada', 'cancelada', 'finalizada', name='viagemstatus'),
                type_=sa.String(),  # ou outro tipo antigo
                existing_nullable=False)
    
    op.execute(
        'ALTER TABLE viagens ALTER COLUMN data_hora TYPE VARCHAR USING data_hora::varchar'
    )
    # op.alter_column('viagens', 'data_hora',
    #            existing_type=sa.DateTime(),
    #            type_=sa.VARCHAR(),
    #            existing_nullable=False)
    
    op.add_column('usuarios', sa.Column('contato_emergencia', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'usuarios', type_='unique')
    op.drop_column('usuarios', 'data_validade_cnh')
    op.drop_column('usuarios', 'categoria_cnh')
    op.drop_column('usuarios', 'cnh')
    op.drop_column('usuarios', 'telefone_emergencia')
    op.drop_column('usuarios', 'nome_emergencia')
    op.drop_column('usuarios', 'status')
    op.drop_column('usuarios', 'matricula')
    # ### end Alembic commands ###
