"""cria tabelas principais

Revision ID: 1a5ab9d0291d
Revises: 
Create Date: 2025-05-16 22:48:32.581695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1a5ab9d0291d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_viagens_id", table_name="viagens", if_exists=True)
    op.drop_table('viagens', if_exists=True)
    op.drop_index('ix_veiculos_id', table_name='veiculos', if_exists=True)
    op.drop_table('veiculos', if_exists=True)
    op.drop_index('ix_usuarios_id', table_name='usuarios', if_exists=True)
    op.drop_table('usuarios', if_exists=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usuarios',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usuarios_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nome', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('senha', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('genero', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('telefone', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contato_emergencia', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descricao', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='usuarios_pkey'),
    sa.UniqueConstraint('email', name='usuarios_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_usuarios_id', 'usuarios', ['id'], unique=False)
    op.create_table('veiculos',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('veiculos_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('modelo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('marca', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('ano', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('placa', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('renavam', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('capacidade', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tipo', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('motorista_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['motorista_id'], ['usuarios.id'], name='veiculos_motorista_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='veiculos_pkey'),
    sa.UniqueConstraint('placa', name='veiculos_placa_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('renavam', name='veiculos_renavam_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_veiculos_id', 'veiculos', ['id'], unique=False)
    op.create_table('viagens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('vagas', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('valor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('trajeto', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_hora', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('tipo_reserva', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('observacao', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('motorista_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('veiculo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['motorista_id'], ['usuarios.id'], name='viagens_motorista_id_fkey'),
    sa.ForeignKeyConstraint(['veiculo_id'], ['veiculos.id'], name='viagens_veiculo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='viagens_pkey')
    )
    op.create_index('ix_viagens_id', 'viagens', ['id'], unique=False)
    # ### end Alembic commands ###
